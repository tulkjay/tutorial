Chapter 6 Subqueries
WHERE
HAVING
FROM
SELECT

Usually in FROM and WHERE.

Can return scalar(single value), single column, or  table.

Order by inside of subquery is used to position data into the correct location.
Do actual ordering on outer query.
Usually subquery can be turned into inner joins.
Outer query cannot select from tables used in subquery.
Very useful with IN clause.

IN can be substituted with LEFT JOIN(LEFT JOIN is more efficient for NOT IN)

WHERE expression comparison_operator [SOME | ANY | ALL] (subquery)
If subquery returns scalar, comparison_operator can be used.
Can be used against a list of values when used with ALL, SOME, or ANY

SOME and ANY are equivalent. SOME is ANSI standard.

The value comes from being able to apply comparison operators.

Correlated Subqueries
Reference FROM alias
Prefix column names with table names in order to prevent accidental outer query references.

[NOT] EXISTS
Shows if subquery returns a data set.
Common to use SELECT * with EXISTS subquery.

Joining to subquery. Apply alias to subquery in order to reference it in the JOIN condition.

Generally more efficient to save subquery as a view.

User defined functions return views to be filtered on.
Subquery can be used in select clause, or outer join can be used.

Common table expressions = Take a non-correlated SQ expression and give it a table name.
WITH cte_name AS (subquery)
[, more ctes or main query]

As more ctes are defined, they can refer to previously defined ctes
Semicolons are required to be used to terminate lines prior to WITH.

Can only be used once.

Recursive CTE
Anchor member and recursive member.
two selects joined with union all.
First select returns single row to be marked as the top.
Second select runs until recursive member returns 0 rows.
Recursive member has to be able to return 0 rows, or else infinite loop.
