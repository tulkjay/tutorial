Chapter 6 Subqueries
WHERE
HAVING
FROM
SELECT

Usually in FROM and WHERE.

Can return scalar(single value), single column, or  table.

Order by inside of subquery is used to position data into the correct location.
Do actual ordering on outer query.
Usually subquery can be turned into inner joins.
Outer query cannot select from tables used in subquery.
Very useful with IN clause.

IN can be substituted with LEFT JOIN(LEFT JOIN is more efficient for NOT IN)

WHERE expression comparison_operator [SOME | ANY | ALL] (subquery)
If subquery returns scalar, comparison_operator can be used.
Can be used against a list of values when used with ALL, SOME, or ANY

SOME and ANY are equivalent. SOME is ANSI standard.

The value comes from being able to apply comparison operators.

Correlated Subqueries
Reference FROM alias
Prefix column names with table names in order to prevent accidental outer query references.

[NOT] EXISTS
Shows if subquery returns a data set.
Common to use SELECT * with EXISTS subquery.

Joining to subquery. Apply alias to subquery in order to reference it in the JOIN condition.

Generally more efficient to save subquery as a view.

User defined functions return views to be filtered on.
Subquery can be used in select clause, or outer join can be used.

Common table expressions = Take a non-correlated SQ expression and give it a table name.
WITH cte_name AS (subquery)
[, more ctes or main query]

As more ctes are defined, they can refer to previously defined ctes
Semicolons are required to be used to terminate lines prior to WITH.

Can only be used once.

Recursive CTE
Anchor member and recursive member.
two selects joined with union all.
First select returns single row to be marked as the top.
Second select runs until recursive member returns 0 rows.
Recursive member has to be able to return 0 rows, or else infinite loop.

Chapter 7 Action Queries
Insert, Update, Delete
SELECT * INTO newTableName FROM expression/w/e
Table building process. sends results into new table.
No keys are transferred. Usually used for debugging/copying.

INSERT
INSERT [INTO] tableName [(column_list)]
VALUES ()[, ()...]

Column list order does not matter.

Default and null values.
Omit identity values, can omit nulls or items with default values.
nifty: Insert into tableName DEFAULT VALUES;
INSERT INTO tableName
(columns)
SELECT () from ...

UPDATE
UPDATE tableName
SET columnName = ''[,...]
[FROM tableSource
WHERE expression]

Mixing in subqueries with UPDATE
...
SET column = (SELECT MAX(...) FROM tableName)
...

Can add FROM query before WHERE to filter down list.

FROM can join tables and create a complex query.

DELETE
DELETE [FROM] tableName
[FROM table_source]
[WHERE search_condition]

without where, all rows get wiped.
TRUNCATE OPERATION will remove everything and reset auto incrementor.
TRUNCATE cannot be used for a table with foreign keys.

Delete is performed on rows.

MERGE
Merge multiple rows from one table to another.
MERGE [INTO] table_target
USING table_source
ON join_condition
[WHEN MATCHED [AND search_condition] THEN statement]
WHEN NOT MATCHED [BY TARGET]
WHEN NOT MATCHED BY SOURCE

MERGE must be ended with a semicolon.
WHEN NOT MATCHED BY SOURCE is used to delete a row from the target table.

Chapter 8 SQL Data Types
String, Numeric, Temporal(Date/Time), Other(Binary, XML, Geometric, etc)
ANSI standard
Numeric
decimal (precision, scale)
    precision: storage size.
    scale: how much to round up.
scale can be any number from 0 to the precision.

String
char(size) --default is 8000
varchar(n)  --default is 8000
size can be max, and will increase size all the way.

varchar will size space taken based on material.
nchar() = national character value. These support Unicode characters.
nvarchar() = national character value.
varchar is replacement for text.

char and varchar can be converted to n[char|varchar] without loss.

datetime 1753-9999
smalldatetime 1900-2079
date 0001-9999
time 1*10^-7
datetime2 - 0001-9999 and very precise time
datetimeoffset - datetime2 + timezone offset
p.247 for common date and time formats

types that need to be explicitly converted:
char, varchar, nchar, nvarchar <-> money, smallmoney
datetime, smalldatetime -> integer types

use CAST or CONVERT to explicitly cast.

CAST(expression as data_type)
CONVERT: same as CAST with formatting option: CONVERT(data_type, expression [, style])
useful for formatting dates and times.
TRY_CONVERT: Same format as CONVERT. Attempts to convert, returns NULL if invalid

STR(float[, length[,decimal]]),
CHAR(int) = returns ASCII equivalent
ASCII(string)
NCHAR(int)
UNICODE(string)

nifty: CHAR functions: tab(9), line feed(10), carriage returns(13)

Chapter 9 functions
String functions: LEN, LTRIM, RTRIM, LEFT, RIGHT, SUBSTRING, REPLACE, REVERSE,
CHARINDEX, PATINDEX - used to find the starting location of item.

CONCAT, LOWER, UPPER, SPACE
P267 for examples of string formatting.

nifty: Splitting full name into first and last name

Numeric functions
ROUND, ISNUMERIC, CEILING, FLOOR, SQUARE, SQRT, RAND()
p271: Formatting and floating results

Datetime functions
GETDATE, GETUTCDATE, SYSDATETIME --datetime2 type,
SYSDATETIMEOFFSET
DAY, MONTH, YEAR, <=function(date)
DATENAME, DATEPART - getting date name spelled out.
DATEADD, DATEDIFF, -- takes a datepart parameter to specify which part to work on.
TODATETIMEOFFSET,
SWITCHOFFSET,
EOMONTH,
DATEFROMPARTS,
ISDATE-returns 1 or 0 if possible

